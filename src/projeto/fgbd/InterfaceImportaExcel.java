/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projeto.fgbd;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Vinicius Coradassi
 */
public class InterfaceImportaExcel extends javax.swing.JFrame {

    private JFileChooser openFileChooser;
    private BufferedReader br;
    String linha = "";
    String csvDivisor = ";";
    /**
     * Creates new form interfaceImportaExcel
     */
    public InterfaceImportaExcel() {
        initComponents();
        fileName.setVisible(false);
        jLabel3.setVisible(false);
        simButton.setVisible(false);
        naoButton.setVisible(false);
        inicializaFileOpenner();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        labelFile = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fileName = new javax.swing.JLabel();
        simButton = new javax.swing.JButton();
        naoButton = new javax.swing.JButton();
        logConexao = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Importar dados do Excel");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setText("Escolha um arquivo .csv");

        jButton1.setText("Open file...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Deseja realmente importar o arquivo:");

        simButton.setText("Sim");
        simButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simButtonActionPerformed(evt);
            }
        });

        naoButton.setText("NÃ£o");
        naoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                naoButtonActionPerformed(evt);
            }
        });

        logConexao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(251, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel2)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(simButton)
                                        .addGap(43, 43, 43)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(naoButton)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(logConexao, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)))
                .addGap(243, 243, 243))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(fileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simButton)
                    .addComponent(naoButton))
                .addGap(100, 100, 100)
                .addComponent(logConexao)
                .addContainerGap(199, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int returnValue = openFileChooser.showOpenDialog(this);
        
        if(returnValue == JFileChooser.APPROVE_OPTION){
            try {
                br = new BufferedReader(new FileReader(openFileChooser.getSelectedFile()));
                labelFile.setText("Arquivo carregado com sucesso!");
                fileName.setVisible(true);
                fileName.setText(openFileChooser.getSelectedFile().getName());
                jLabel3.setVisible(true);
                simButton.setVisible(true);
                naoButton.setVisible(true);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(InterfaceImportaExcel.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else{
            labelFile.setText("Nenhum arquivo selecionado!");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void naoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_naoButtonActionPerformed
        br = null;
        inicializaFileOpenner();
        fileName.setVisible(false);
        jLabel3.setVisible(false);
        simButton.setVisible(false);
        naoButton.setVisible(false);
        labelFile.setText("");
    }//GEN-LAST:event_naoButtonActionPerformed

    private void simButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simButtonActionPerformed
        try {
            String name = openFileChooser.getSelectedFile().getName().split(".csv")[0].replaceAll("-", "_");
            boolean criarTabela = DBUtils.verificaCriaTabela(name);
            percorreExcel(criarTabela, name);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InterfaceImportaExcel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(InterfaceImportaExcel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_simButtonActionPerformed

     private void percorreExcel(boolean criaTabela, String name) throws ClassNotFoundException, SQLException{
        boolean primeiraLinha = true;
        boolean segundaLinha = false;
        String[] colunasNomes = null;
        try {
            while ((linha = br.readLine()) != null) {
                
                String[] colunas = linha.split(csvDivisor);
                
                if(primeiraLinha == false){
                    if(segundaLinha == true){
                        if(criaTabela){
                            DBUtils.criaNovaTabelaBanco(colunasNomes, name, colunas);
                        }
                        segundaLinha = false;
                    }
                }
                if(primeiraLinha == false){
                    DBUtils.insereDadosTabela(colunasNomes, colunas, name);
                }

                if(primeiraLinha == true){
                    colunasNomes = colunas;
                    primeiraLinha = false;
                    segundaLinha = true;
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(InterfaceImportaExcel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void inicializaFileOpenner(){
        openFileChooser = new JFileChooser();
        openFileChooser.setCurrentDirectory(new File("D:\\downloads"));
        openFileChooser.setFileFilter(new FileNameExtensionFilter( "CSV files (*csv)", "csv"));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceImportaExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceImportaExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceImportaExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceImportaExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceImportaExcel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fileName;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel labelFile;
    private javax.swing.JLabel logConexao;
    private javax.swing.JButton naoButton;
    private javax.swing.JButton simButton;
    // End of variables declaration//GEN-END:variables
    
    
}
